//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyHocSinh.WCFProxy1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFProxy1.IQuanLyService")]
    public interface IQuanLyService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/DangNhap", ReplyAction="http://tempuri.org/IQuanLyService/DangNhapResponse")]
        bool DangNhap(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/DangNhap", ReplyAction="http://tempuri.org/IQuanLyService/DangNhapResponse")]
        System.Threading.Tasks.Task<bool> DangNhapAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/GetThongTinNguoiDung", ReplyAction="http://tempuri.org/IQuanLyService/GetThongTinNguoiDungResponse")]
        DTO.NguoiDungDTO GetThongTinNguoiDung(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/GetThongTinNguoiDung", ReplyAction="http://tempuri.org/IQuanLyService/GetThongTinNguoiDungResponse")]
        System.Threading.Tasks.Task<DTO.NguoiDungDTO> GetThongTinNguoiDungAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/ThemLopHoc", ReplyAction="http://tempuri.org/IQuanLyService/ThemLopHocResponse")]
        bool ThemLopHoc(DTO.LopDTO lop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/ThemLopHoc", ReplyAction="http://tempuri.org/IQuanLyService/ThemLopHocResponse")]
        System.Threading.Tasks.Task<bool> ThemLopHocAsync(DTO.LopDTO lop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/TimLopTheoMa", ReplyAction="http://tempuri.org/IQuanLyService/TimLopTheoMaResponse")]
        DTO.LopDTO[] TimLopTheoMa(string maLop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/TimLopTheoMa", ReplyAction="http://tempuri.org/IQuanLyService/TimLopTheoMaResponse")]
        System.Threading.Tasks.Task<DTO.LopDTO[]> TimLopTheoMaAsync(string maLop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/TimLopTheoTen", ReplyAction="http://tempuri.org/IQuanLyService/TimLopTheoTenResponse")]
        DTO.LopDTO[] TimLopTheoTen(string tenLop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/TimLopTheoTen", ReplyAction="http://tempuri.org/IQuanLyService/TimLopTheoTenResponse")]
        System.Threading.Tasks.Task<DTO.LopDTO[]> TimLopTheoTenAsync(string tenLop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/ThemHocSinh", ReplyAction="http://tempuri.org/IQuanLyService/ThemHocSinhResponse")]
        bool ThemHocSinh(DTO.HocSinhDTO hocSinh);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/ThemHocSinh", ReplyAction="http://tempuri.org/IQuanLyService/ThemHocSinhResponse")]
        System.Threading.Tasks.Task<bool> ThemHocSinhAsync(DTO.HocSinhDTO hocSinh);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/TimHocSinhTheoMa", ReplyAction="http://tempuri.org/IQuanLyService/TimHocSinhTheoMaResponse")]
        DTO.HocSinhDTO[] TimHocSinhTheoMa(string maHS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/TimHocSinhTheoMa", ReplyAction="http://tempuri.org/IQuanLyService/TimHocSinhTheoMaResponse")]
        System.Threading.Tasks.Task<DTO.HocSinhDTO[]> TimHocSinhTheoMaAsync(string maHS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/TimHocSinhTheoTen", ReplyAction="http://tempuri.org/IQuanLyService/TimHocSinhTheoTenResponse")]
        DTO.HocSinhDTO[] TimHocSinhTheoTen(string tenHS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/TimHocSinhTheoTen", ReplyAction="http://tempuri.org/IQuanLyService/TimHocSinhTheoTenResponse")]
        System.Threading.Tasks.Task<DTO.HocSinhDTO[]> TimHocSinhTheoTenAsync(string tenHS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/ThemGiaoVien", ReplyAction="http://tempuri.org/IQuanLyService/ThemGiaoVienResponse")]
        bool ThemGiaoVien(DTO.GiaoVienDTO giaoVien);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/ThemGiaoVien", ReplyAction="http://tempuri.org/IQuanLyService/ThemGiaoVienResponse")]
        System.Threading.Tasks.Task<bool> ThemGiaoVienAsync(DTO.GiaoVienDTO giaoVien);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/TimGiaoVienTheoMa", ReplyAction="http://tempuri.org/IQuanLyService/TimGiaoVienTheoMaResponse")]
        DTO.GiaoVienDTO[] TimGiaoVienTheoMa(string maGV);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/TimGiaoVienTheoMa", ReplyAction="http://tempuri.org/IQuanLyService/TimGiaoVienTheoMaResponse")]
        System.Threading.Tasks.Task<DTO.GiaoVienDTO[]> TimGiaoVienTheoMaAsync(string maGV);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/TimGiaoVienTheoTen", ReplyAction="http://tempuri.org/IQuanLyService/TimGiaoVienTheoTenResponse")]
        DTO.GiaoVienDTO[] TimGiaoVienTheoTen(string tenGV);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/TimGiaoVienTheoTen", ReplyAction="http://tempuri.org/IQuanLyService/TimGiaoVienTheoTenResponse")]
        System.Threading.Tasks.Task<DTO.GiaoVienDTO[]> TimGiaoVienTheoTenAsync(string tenGV);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/DangNhapHocSinh", ReplyAction="http://tempuri.org/IQuanLyService/DangNhapHocSinhResponse")]
        bool DangNhapHocSinh(string maHS, string matKhau);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/DangNhapHocSinh", ReplyAction="http://tempuri.org/IQuanLyService/DangNhapHocSinhResponse")]
        System.Threading.Tasks.Task<bool> DangNhapHocSinhAsync(string maHS, string matKhau);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/LayTaiKhoanHocSinh", ReplyAction="http://tempuri.org/IQuanLyService/LayTaiKhoanHocSinhResponse")]
        DTO.TaiKhoanHocSinhDTO LayTaiKhoanHocSinh(string maHS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/LayTaiKhoanHocSinh", ReplyAction="http://tempuri.org/IQuanLyService/LayTaiKhoanHocSinhResponse")]
        System.Threading.Tasks.Task<DTO.TaiKhoanHocSinhDTO> LayTaiKhoanHocSinhAsync(string maHS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/LuuDiem", ReplyAction="http://tempuri.org/IQuanLyService/LuuDiemResponse")]
        void LuuDiem(DTO.DiemDTO[] danhSachDiem, string maLop, string maNamHoc, string maMonHoc, string maHocKy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/LuuDiem", ReplyAction="http://tempuri.org/IQuanLyService/LuuDiemResponse")]
        System.Threading.Tasks.Task LuuDiemAsync(DTO.DiemDTO[] danhSachDiem, string maLop, string maNamHoc, string maMonHoc, string maHocKy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/LuuPhanCong", ReplyAction="http://tempuri.org/IQuanLyService/LuuPhanCongResponse")]
        bool LuuPhanCong(System.Data.DataTable dtPhanCong);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/LuuPhanCong", ReplyAction="http://tempuri.org/IQuanLyService/LuuPhanCongResponse")]
        System.Threading.Tasks.Task<bool> LuuPhanCongAsync(System.Data.DataTable dtPhanCong);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/ThemPhanCong", ReplyAction="http://tempuri.org/IQuanLyService/ThemPhanCongResponse")]
        bool ThemPhanCong(DTO.PhanCongDTO phanCong);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/ThemPhanCong", ReplyAction="http://tempuri.org/IQuanLyService/ThemPhanCongResponse")]
        System.Threading.Tasks.Task<bool> ThemPhanCongAsync(DTO.PhanCongDTO phanCong);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/ThemPhanCongCheck", ReplyAction="http://tempuri.org/IQuanLyService/ThemPhanCongCheckResponse")]
        string ThemPhanCongCheck(DTO.PhanCongDTO phanCong);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuanLyService/ThemPhanCongCheck", ReplyAction="http://tempuri.org/IQuanLyService/ThemPhanCongCheckResponse")]
        System.Threading.Tasks.Task<string> ThemPhanCongCheckAsync(DTO.PhanCongDTO phanCong);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IQuanLyServiceChannel : QuanLyHocSinh.WCFProxy1.IQuanLyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QuanLyServiceClient : System.ServiceModel.ClientBase<QuanLyHocSinh.WCFProxy1.IQuanLyService>, QuanLyHocSinh.WCFProxy1.IQuanLyService {
        
        public QuanLyServiceClient() {
        }
        
        public QuanLyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QuanLyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuanLyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuanLyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool DangNhap(string username, string password) {
            return base.Channel.DangNhap(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> DangNhapAsync(string username, string password) {
            return base.Channel.DangNhapAsync(username, password);
        }
        
        public DTO.NguoiDungDTO GetThongTinNguoiDung(string username, string password) {
            return base.Channel.GetThongTinNguoiDung(username, password);
        }
        
        public System.Threading.Tasks.Task<DTO.NguoiDungDTO> GetThongTinNguoiDungAsync(string username, string password) {
            return base.Channel.GetThongTinNguoiDungAsync(username, password);
        }
        
        public bool ThemLopHoc(DTO.LopDTO lop) {
            return base.Channel.ThemLopHoc(lop);
        }
        
        public System.Threading.Tasks.Task<bool> ThemLopHocAsync(DTO.LopDTO lop) {
            return base.Channel.ThemLopHocAsync(lop);
        }
        
        public DTO.LopDTO[] TimLopTheoMa(string maLop) {
            return base.Channel.TimLopTheoMa(maLop);
        }
        
        public System.Threading.Tasks.Task<DTO.LopDTO[]> TimLopTheoMaAsync(string maLop) {
            return base.Channel.TimLopTheoMaAsync(maLop);
        }
        
        public DTO.LopDTO[] TimLopTheoTen(string tenLop) {
            return base.Channel.TimLopTheoTen(tenLop);
        }
        
        public System.Threading.Tasks.Task<DTO.LopDTO[]> TimLopTheoTenAsync(string tenLop) {
            return base.Channel.TimLopTheoTenAsync(tenLop);
        }
        
        public bool ThemHocSinh(DTO.HocSinhDTO hocSinh) {
            return base.Channel.ThemHocSinh(hocSinh);
        }
        
        public System.Threading.Tasks.Task<bool> ThemHocSinhAsync(DTO.HocSinhDTO hocSinh) {
            return base.Channel.ThemHocSinhAsync(hocSinh);
        }
        
        public DTO.HocSinhDTO[] TimHocSinhTheoMa(string maHS) {
            return base.Channel.TimHocSinhTheoMa(maHS);
        }
        
        public System.Threading.Tasks.Task<DTO.HocSinhDTO[]> TimHocSinhTheoMaAsync(string maHS) {
            return base.Channel.TimHocSinhTheoMaAsync(maHS);
        }
        
        public DTO.HocSinhDTO[] TimHocSinhTheoTen(string tenHS) {
            return base.Channel.TimHocSinhTheoTen(tenHS);
        }
        
        public System.Threading.Tasks.Task<DTO.HocSinhDTO[]> TimHocSinhTheoTenAsync(string tenHS) {
            return base.Channel.TimHocSinhTheoTenAsync(tenHS);
        }
        
        public bool ThemGiaoVien(DTO.GiaoVienDTO giaoVien) {
            return base.Channel.ThemGiaoVien(giaoVien);
        }
        
        public System.Threading.Tasks.Task<bool> ThemGiaoVienAsync(DTO.GiaoVienDTO giaoVien) {
            return base.Channel.ThemGiaoVienAsync(giaoVien);
        }
        
        public DTO.GiaoVienDTO[] TimGiaoVienTheoMa(string maGV) {
            return base.Channel.TimGiaoVienTheoMa(maGV);
        }
        
        public System.Threading.Tasks.Task<DTO.GiaoVienDTO[]> TimGiaoVienTheoMaAsync(string maGV) {
            return base.Channel.TimGiaoVienTheoMaAsync(maGV);
        }
        
        public DTO.GiaoVienDTO[] TimGiaoVienTheoTen(string tenGV) {
            return base.Channel.TimGiaoVienTheoTen(tenGV);
        }
        
        public System.Threading.Tasks.Task<DTO.GiaoVienDTO[]> TimGiaoVienTheoTenAsync(string tenGV) {
            return base.Channel.TimGiaoVienTheoTenAsync(tenGV);
        }
        
        public bool DangNhapHocSinh(string maHS, string matKhau) {
            return base.Channel.DangNhapHocSinh(maHS, matKhau);
        }
        
        public System.Threading.Tasks.Task<bool> DangNhapHocSinhAsync(string maHS, string matKhau) {
            return base.Channel.DangNhapHocSinhAsync(maHS, matKhau);
        }
        
        public DTO.TaiKhoanHocSinhDTO LayTaiKhoanHocSinh(string maHS) {
            return base.Channel.LayTaiKhoanHocSinh(maHS);
        }
        
        public System.Threading.Tasks.Task<DTO.TaiKhoanHocSinhDTO> LayTaiKhoanHocSinhAsync(string maHS) {
            return base.Channel.LayTaiKhoanHocSinhAsync(maHS);
        }
        
        public void LuuDiem(DTO.DiemDTO[] danhSachDiem, string maLop, string maNamHoc, string maMonHoc, string maHocKy) {
            base.Channel.LuuDiem(danhSachDiem, maLop, maNamHoc, maMonHoc, maHocKy);
        }
        
        public System.Threading.Tasks.Task LuuDiemAsync(DTO.DiemDTO[] danhSachDiem, string maLop, string maNamHoc, string maMonHoc, string maHocKy) {
            return base.Channel.LuuDiemAsync(danhSachDiem, maLop, maNamHoc, maMonHoc, maHocKy);
        }
        
        public bool LuuPhanCong(System.Data.DataTable dtPhanCong) {
            return base.Channel.LuuPhanCong(dtPhanCong);
        }
        
        public System.Threading.Tasks.Task<bool> LuuPhanCongAsync(System.Data.DataTable dtPhanCong) {
            return base.Channel.LuuPhanCongAsync(dtPhanCong);
        }
        
        public bool ThemPhanCong(DTO.PhanCongDTO phanCong) {
            return base.Channel.ThemPhanCong(phanCong);
        }
        
        public System.Threading.Tasks.Task<bool> ThemPhanCongAsync(DTO.PhanCongDTO phanCong) {
            return base.Channel.ThemPhanCongAsync(phanCong);
        }
        
        public string ThemPhanCongCheck(DTO.PhanCongDTO phanCong) {
            return base.Channel.ThemPhanCongCheck(phanCong);
        }
        
        public System.Threading.Tasks.Task<string> ThemPhanCongCheckAsync(DTO.PhanCongDTO phanCong) {
            return base.Channel.ThemPhanCongCheckAsync(phanCong);
        }
    }
}
